{"is_source_file": true, "format": "Python", "description": "This file implements a SchemaLoader class responsible for loading, caching, and invalidating an OpenAPI schema from either a URL or a local file. It features thread safety, supports conditional HTTP requests with ETag and Last-Modified headers, and provides methods for schema retrieval, reloading, and source tracking.", "external_files": ["requests", "os", "json", "threading", "datetime"], "external_methods": ["requests.Session.get", "os.path.exists", "os.path.isabs", "json.load", "json.dumps", "datetime.utcnow", "datetime.datetime.isoformat"], "published": ["SchemaLoader", "load_schema", "get_schema", "reload", "source_info"], "classes": [{"name": "SchemaLoader", "description": "A class that manages loading, caching, and retrieving an OpenAPI schema from a URL or local file with thread safety and conditional HTTP caching support."}], "methods": [{"name": "__init__(self, url: Optional[str], local_path: str, session: Optional[requests.Session] = None)", "description": "Initializes the SchemaLoader with optional URL, local path, and session. Sets up cache and threading lock.", "scope": "SchemaLoader", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] _load_from_file(self)", "description": "Loads schema content from a local file if it exists.", "scope": "SchemaLoader", "scopeKind": "class"}, {"name": "Optional[Dict[str,Any]] _load_from_url(self)", "description": "Fetches schema from a URL with support for conditional GET using ETag and Last-Modified headers.", "scope": "SchemaLoader", "scopeKind": "class"}, {"name": "Dict[str,Any] load_schema(self)", "description": "Primary method to load schema, prioritizing local file, then URL, then fallback.", "scope": "SchemaLoader", "scopeKind": "class"}, {"name": "Dict[str,Any] get_schema(self)", "description": "Returns the current schema, loading it if necessary.", "scope": "SchemaLoader", "scopeKind": "class"}, {"name": "Dict[str,Any] reload(self)", "description": "Forces a reload of the schema, respecting conditional headers.", "scope": "SchemaLoader", "scopeKind": "class"}, {"name": "str source_info(self)", "description": "Provides information on where the schema was loaded from, including metadata.", "scope": "SchemaLoader", "scopeKind": "class"}], "calls": ["self.session.get", "os.path.exists", "json.load", "datetime.utcnow", "json.dumps"], "search-terms": ["SchemaLoader", "OpenAPI schema cache", "conditional GET", "thread-safe schema loader", "local file vs URL schema"], "state": 2, "file_id": 12, "knowledge_revision": 53, "git_revision": "84dd8cc33a18c2a1f5d4da6d64417d6d69900bf6", "revision_history": [{"27": ""}, {"46": "6c663459b5cbf5c43f72c736ffc19d714f7eb24b"}, {"53": "84dd8cc33a18c2a1f5d4da6d64417d6d69900bf6"}], "ctags": [{"_type": "tag", "name": "SchemaLoader", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/schema_loader.py", "pattern": "/^class SchemaLoader:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/schema_loader.py", "pattern": "/^    def __init__(self, url: Optional[str], local_path: str, session: Optional[requests.Session] /", "language": "Python", "kind": "member", "signature": "(self, url: Optional[str], local_path: str, session: Optional[requests.Session] = None)", "scope": "SchemaLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_load_from_file", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/schema_loader.py", "pattern": "/^    def _load_from_file(self) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "SchemaLoader", "scopeKind": "class"}, {"_type": "tag", "name": "_load_from_url", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/schema_loader.py", "pattern": "/^    def _load_from_url(self) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "SchemaLoader", "scopeKind": "class"}, {"_type": "tag", "name": "get_schema", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/schema_loader.py", "pattern": "/^    def get_schema(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "SchemaLoader", "scopeKind": "class"}, {"_type": "tag", "name": "load_schema", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/schema_loader.py", "pattern": "/^    def load_schema(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "SchemaLoader", "scopeKind": "class"}, {"_type": "tag", "name": "reload", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/schema_loader.py", "pattern": "/^    def reload(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "SchemaLoader", "scopeKind": "class"}, {"_type": "tag", "name": "source_info", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/schema_loader.py", "pattern": "/^    def source_info(self) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "member", "signature": "(self)", "scope": "SchemaLoader", "scopeKind": "class"}], "hash": "e45272f2ae554aca454b03e7417b4032", "format-version": 4, "code-base-name": "FlaskTMFTranslationMiddleware", "filename": "FlaskTMFTranslationMiddleware/app/services/schema_loader.py"}