{"is_source_file": true, "format": "Python", "description": "This file defines a ValidationService class for runtime validation of payloads against OpenAPI schemas using jsonschema. It includes methods to find the relevant schema for a resource and to perform validation, providing error messages if validation fails.", "external_files": ["jsonschema"], "external_methods": ["jsonschema.Draft7Validator", "jsonschema.RefResolver", "jsonschema.exceptions"], "published": ["ValidationService"], "classes": [{"name": "ValidationService", "description": "Provides runtime schema validation for payloads based on loaded OpenAPI schemas."}], "methods": [{"name": "__init__(self, schema_loader)", "description": "Initializes the ValidationService with a schema loader.", "scope": "ValidationService", "scopeKind": "class"}, {"name": "Dict[str,Any] _find_schema_for_resource(self, resource: str)", "description": "Attempts to find a schema definition matching the resource name from the loaded schemas, using case-insensitive matching and fallbacks.", "scope": "ValidationService", "scopeKind": "class"}, {"name": "Tuple[bool,list] validate(self, resource: str, payload: Any, direction: str = \"tmf_to_native\")", "description": "Validates a payload against the schema for a specified resource, returning a success flag and error messages.", "scope": "ValidationService", "scopeKind": "class"}], "calls": ["self.schema_loader.get_schema()", "RefResolver.from_schema()", "Draft7Validator()", "validator.iter_errors()"], "search-terms": ["ValidationService", "jsonschema", "schema validation", "OpenAPI", "resource schema lookup", "payload validation"], "state": 2, "file_id": 14, "knowledge_revision": 31, "git_revision": "", "ctags": [{"_type": "tag", "name": "ValidationService", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/validator.py", "pattern": "/^class ValidationService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/validator.py", "pattern": "/^    def __init__(self, schema_loader):$/", "language": "Python", "kind": "member", "signature": "(self, schema_loader)", "scope": "ValidationService", "scopeKind": "class"}, {"_type": "tag", "name": "_find_schema_for_resource", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/validator.py", "pattern": "/^    def _find_schema_for_resource(self, resource: str) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, resource: str)", "scope": "ValidationService", "scopeKind": "class"}, {"_type": "tag", "name": "jsonschema_exceptions", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/validator.py", "pattern": "/^from jsonschema import Draft7Validator, RefResolver, exceptions as jsonschema_exceptions$/", "language": "Python", "kind": "unknown", "nameref": "unknown:exceptions"}, {"_type": "tag", "name": "validate", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/validator.py", "pattern": "/^    def validate(self, resource: str, payload: Any, direction: str = \"tmf_to_native\") -> Tuple[b/", "language": "Python", "typeref": "typename:Tuple[bool,list]", "kind": "member", "signature": "(self, resource: str, payload: Any, direction: str = \"tmf_to_native\")", "scope": "ValidationService", "scopeKind": "class"}], "hash": "c078642c7a558a7046280b9fe6222c39", "format-version": 4, "code-base-name": "FlaskTMFTranslationMiddleware", "filename": "FlaskTMFTranslationMiddleware/app/services/validator.py", "revision_history": [{"31": ""}]}