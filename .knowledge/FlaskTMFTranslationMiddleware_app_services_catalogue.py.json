{"is_source_file": true, "format": "Python", "description": "This Python source file defines a class 'CatalogueService' responsible for generating a TMF-like resource catalogue from a provided OpenAPI schema. It includes methods to infer CRUD capabilities from schema paths, assemble the catalogue with resource attributes and capabilities, and provide schema metadata.", "external_files": [".schema_loader's get_schema method that returns the OpenAPI schema"], "external_methods": ["schema_loader.get_schema", "getattr (built-in Python function)"], "published": ["CatalogueService"], "classes": [{"name": "CatalogueService", "description": "A service class that generates a resource catalogue from an OpenAPI schema, including inference of CRUD capabilities and schema metadata."}], "methods": [{"name": "__init__(self, schema_loader)", "description": "Initializes the CatalogueService with a schema loader.", "scope": "CatalogueService", "scopeKind": "class"}, {"name": "Dict[str,bool] _crud_from_paths(self, resource_name: str, paths: Dict[str, Any])", "description": "Infers CRUD capabilities based on REST endpoint paths and methods for a given resource.", "scope": "CatalogueService", "scopeKind": "class"}, {"name": "List[Dict[str,Any]] generate_catalogue(self)", "description": "Produces a TMF-like resource catalogue including resource attributes, descriptions, key attributes, and CRUD capabilities.", "scope": "CatalogueService", "scopeKind": "class"}, {"name": "Dict[str,Any] schema_info(self)", "description": "Returns metadata about the schema such as OpenAPI version, generation timestamp, and source info.", "scope": "CatalogueService", "scopeKind": "class"}], "calls": ["self.schema_loader.get_schema()", "getattr(self.schema_loader, 'source_info', lambda: 'unknown')()", "schema.get('components')", "schema.get('paths')", "spec.get('type')", "spec.get('$ref')", "prop_spec.get('type')", "prop_spec.get('$ref')"], "search-terms": ["CatalogueService", "generate_catalogue", "openapi", "schema_loader", "CRUD inference", "TMF resource catalogue"], "state": 2, "file_id": 15, "knowledge_revision": 47, "git_revision": "6c663459b5cbf5c43f72c736ffc19d714f7eb24b", "revision_history": [{"33": ""}, {"47": "6c663459b5cbf5c43f72c736ffc19d714f7eb24b"}], "ctags": [{"_type": "tag", "name": "CatalogueService", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/catalogue.py", "pattern": "/^class CatalogueService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/catalogue.py", "pattern": "/^    def __init__(self, schema_loader):$/", "language": "Python", "kind": "member", "signature": "(self, schema_loader)", "scope": "CatalogueService", "scopeKind": "class"}, {"_type": "tag", "name": "_crud_from_paths", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/catalogue.py", "pattern": "/^    def _crud_from_paths(self, resource_name: str, paths: Dict[str, Any]) -> Dict[str, bool]:$/", "language": "Python", "typeref": "typename:Dict[str,bool]", "kind": "member", "signature": "(self, resource_name: str, paths: Dict[str, Any])", "scope": "CatalogueService", "scopeKind": "class"}, {"_type": "tag", "name": "generate_catalogue", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/catalogue.py", "pattern": "/^    def generate_catalogue(self) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "CatalogueService", "scopeKind": "class"}, {"_type": "tag", "name": "schema_info", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/catalogue.py", "pattern": "/^    def schema_info(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "CatalogueService", "scopeKind": "class"}], "hash": "7dba1ad97097c56e21d02d65923e7e7a", "format-version": 4, "code-base-name": "FlaskTMFTranslationMiddleware", "filename": "FlaskTMFTranslationMiddleware/app/services/catalogue.py"}