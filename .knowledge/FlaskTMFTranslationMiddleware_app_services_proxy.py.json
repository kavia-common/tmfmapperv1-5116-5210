{"is_source_file": true, "format": "Python", "description": "This file defines a ProxyService class that forwards HTTP requests to an upstream Django application, managing headers, retries, and error handling.", "external_files": ["app.utils.errors"], "external_methods": ["requests.Session.request", "requests.Session.get"], "published": ["ProxyService"], "classes": [{"name": "ProxyService", "description": "A service class that handles forwarding HTTP requests with retries, custom headers, and health checks to an upstream application."}], "methods": [{"name": "__init__( self, base_url: str, session: Optional[requests.Session] = None, timeout_seconds: float = 10.0, retry_count: int = 1, static_bearer: str = \"\", api_key: str = \"\", api_key_header: str = \"X-API-Key\", )", "description": "Initializes the ProxyService with configuration parameters such as base URL, timeout, retries, and headers.", "scope": "ProxyService", "scopeKind": "class"}, {"name": "Dict[str,str] _build_headers(self, extra_headers: Optional[Dict[str, str]] = None)", "description": "Constructs request headers including authorization and API key headers, plus any extra headers.", "scope": "ProxyService", "scopeKind": "class"}, {"name": "Tuple[Any,int] forward( self, method: str, path: str, params: Optional[Dict[str, Any]] = None, json: Optional[Dict[str, Any]] = None, headers: Optional[Dict[str, str]] = None, )", "description": "Forwards an HTTP request to the upstream server, handles retries, and returns the response data and status code.", "scope": "ProxyService", "scopeKind": "class"}, {"name": "Tuple[bool,Optional[int]] health(self)", "description": "Performs a health check against the upstream server by sending a GET request to the base URL.", "scope": "ProxyService", "scopeKind": "class"}], "calls": ["self.session.request", "self.session.get"], "search-terms": ["ProxyService", "forward method", "health check", "upstream request", "retries", "headers construction"], "state": 2, "file_id": 16, "knowledge_revision": 56, "git_revision": "6c663459b5cbf5c43f72c736ffc19d714f7eb24b", "revision_history": [{"35": ""}, {"56": "6c663459b5cbf5c43f72c736ffc19d714f7eb24b"}], "ctags": [{"_type": "tag", "name": "ProxyService", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/proxy.py", "pattern": "/^class ProxyService:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/proxy.py", "pattern": "/^    def __init__($/", "language": "Python", "kind": "member", "signature": "( self, base_url: str, session: Optional[requests.Session] = None, timeout_seconds: float = 10.0, retry_count: int = 1, static_bearer: str = \"\", api_key: str = \"\", api_key_header: str = \"X-API-Key\", )", "scope": "ProxyService", "scopeKind": "class"}, {"_type": "tag", "name": "_build_headers", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/proxy.py", "pattern": "/^    def _build_headers(self, extra_headers: Optional[Dict[str, str]] = None) -> Dict[str, str]:$/", "language": "Python", "typeref": "typename:Dict[str,str]", "kind": "member", "signature": "(self, extra_headers: Optional[Dict[str, str]] = None)", "scope": "ProxyService", "scopeKind": "class"}, {"_type": "tag", "name": "forward", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/proxy.py", "pattern": "/^    def forward($/", "language": "Python", "typeref": "typename:Tuple[Any,int]", "kind": "member", "signature": "( self, method: str, path: str, params: Optional[Dict[str, Any]] = None, json: Optional[Dict[str, Any]] = None, headers: Optional[Dict[str, str]] = None, )", "scope": "ProxyService", "scopeKind": "class"}, {"_type": "tag", "name": "health", "path": "/home/kavia/workspace/code-generation/tmfmapperv1-5116-5210/FlaskTMFTranslationMiddleware/app/services/proxy.py", "pattern": "/^    def health(self) -> Tuple[bool, Optional[int]]:$/", "language": "Python", "typeref": "typename:Tuple[bool,Optional[int]]", "kind": "member", "signature": "(self)", "scope": "ProxyService", "scopeKind": "class"}], "hash": "7ed92f3e7469d2450cd2d62380303e3c", "format-version": 4, "code-base-name": "FlaskTMFTranslationMiddleware", "filename": "FlaskTMFTranslationMiddleware/app/services/proxy.py"}